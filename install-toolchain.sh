#!/bin/bash
set -eu -o pipefail

# install prerequisites for running Apache Avro tools
MAC_JRE=openjdk
DEBIAN_JRE=default-jre-headless
AVRO_VERSION=1.11.3

SCRIPT_DIR=$(dirname $(realpath $0))

AVRO_DIR=$SCRIPT_DIR/avro
JAVA_DIR=$SCRIPT_DIR/avro/java
TOOLCHAIN_BIN=$AVRO_DIR/bin

# Would be nice to install here instead of system paths, but then we have to
# give up the convenience of package managers
#USR_DIR=${USR_DIR:-$HOME/.local}
pstatus ( ) {
    echo -e "\033[96m==> $1\033[0m"
}

info ( ) {
    echo -e "\033[32m---> $1\033[0m"
}

error ( ) {
    echo -e "\033[91mError: $1\033[0m"
    exit 1
}


install_java_linux ( ) {
    # skip if java already installed, don't assume debian
    if [ -x "$(command -v java)" ]; then
        info "Java runtime already installed."
        return
    fi
    # Exit with error if not a debian-based OS
    if [ ! -f /etc/debian_version ]; then
        error "Unsupported non-debian OS: $OSTYPE"
    fi
    sudo apt-get update
    set -x
    sudo apt-get install -y $DEBIAN_JRE
    set +x
}

install_java_mac ( ) {
    set -x
    brew install $MAC_JRE
    set +x
}

install_java_runtime ( ) {
    pstatus "Java runtime"
    # Check if openjdk runtime is already in system path. If so,
    # print path and version and exit
    if command -v java &> /dev/null; then
        info "Java runtime already installed:"
        java -version
        return 0
    fi

    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        install_java_linux
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        info "Warning: OSX support not tested. Remove this warning if it works."
        install_java_mac
    else
        error "Unsupported OS: $OSTYPE"
    fi
}

ensure_directory ( ) {
    if [ ! -d $1 ]; then
        mkdir -p $1
    fi
}

install_avro_tools ( ) {
    pstatus "Avro tools"
    ensure_directory $JAVA_DIR
    pushd $JAVA_DIR > /dev/null
    JAR=avro-tools-$AVRO_VERSION.jar
    if [ -f ./$JAR ]; then
        info "Avro tools already downloaded, skipping."
        return
    else
        URL="https://dlcdn.apache.org/avro/avro-$AVRO_VERSION/java/$JAR"
        curl -OL $URL
    fi
    popd > /dev/null
}

create_avro_script ( ) {
    pstatus "Avro script"
    ensure_directory $TOOLCHAIN_BIN
    SCRIPT=$TOOLCHAIN_BIN/avro-idl.sh
    if [ -f $SCRIPT ]; then
        info "Replacing existing script: $SCRIPT"
        rm $SCRIPT
    else
        info "Creating script: $SCRIPT"
    fi
    JAR=avro-tools-$AVRO_VERSION.jar
    cat <<EOF > $SCRIPT
#!/bin/bash
# This script is generated by install-toolchain.sh
java -jar $JAVA_DIR/$JAR idl2schemata \$@
EOF
    chmod u+x $SCRIPT
}

#
# main
#
install_java_runtime
install_avro_tools
create_avro_script
